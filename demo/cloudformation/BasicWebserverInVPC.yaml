---
AWSTemplateFormatVersion: "2010-09-09"

Parameters:

  InstanceType:
    Description: "Webserver instance type."
    Type: "String"
    Default: "t2.micro"
    AllowedValues:
      - "t2.micro"
      - "t2.medium"

Resources:
  ClassVpc:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      CidrBlock: "10.0.0.0/16"
      Tags:
        - Key: Environment
          Value: Class

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ClassVpc
      CidrBlock: "10.0.0.0/24"
      MapPublicIpOnLaunch: true
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""

  WebserverSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref ClassVpc
      GroupDescription: "Allow access from HTTP traffic"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: "0.0.0.0/0"

  InternetGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: stack
        Value: class

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGW
      VpcId: !Ref ClassVpc

  PublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ClassVpc

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      RouteTableId: !Ref PublicRT
      GatewayId: !Ref InternetGW
    DependsOn:
      - InternetGW

  PublicSubnet1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRT
      SubnetId: !Ref PublicSubnet1

  ClassServerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'

  ClassInstanceProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: "/"
      Roles: 
        - !Ref ClassServerRole

  ClassWebserver:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: "ami-031a2e82d50ed8905"
      SubnetId: !Ref PublicSubnet1
      IamInstanceProfile: !Ref ClassInstanceProfile
      SecurityGroupIds:
        - !Ref WebserverSG
      Tags:
        - Key: "Name"
          Value: "ClassWebserver"

Outputs:
  WebUrl:
    Value: !Join ["", ["http://", !GetAtt ClassWebserver.PublicIp]]
    Description: "Webserver URL"
