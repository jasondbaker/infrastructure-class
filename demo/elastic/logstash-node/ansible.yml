---
- hosts: localhost
  become: yes

  roles:
    - role: nginx
    - role: java
      java_packages:
        - openjdk-8-jdk
      java_home: ""
  
  vars:
    gatling_version: gatling-charts-highcharts-bundle-3.2.1

  tasks:

  - name: add git apt repository
    apt_repository:
        repo: ppa:git-core/ppa

  - name: Add an apt key by id from a keyserver
    apt_key:
        keyserver: hkp://keyserver.ubuntu.com:80
        id: 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF

  - name: Update and upgrade apt packages
    apt:
      upgrade: yes
      update_cache: yes
  
  - name: install packages
    apt:
      name: [
        'apt-transport-https',
        'git',
        'gunicorn',
        'jq',
        'supervisor',
        'python3-pip',
        'python3',
        'wget',
        'zip'
      ]
  
  - name: install any required python modules
    pip:
      name:
        - boto3==1.9.48
        - Flask==1.1.1

  - name: install webapp
    block:
      - file:
          path: /home/ubuntu/webapp
          state: directory
      - file:
          path: /var/log/webapp
          state: directory
      - copy:
          src: /tmp/app.py
          dest: /home/ubuntu/webapp/app.py
          owner: ubuntu
          group: ubuntu
          mode: 0644
      - copy:
          src: /tmp/webapp.conf
          dest: /etc/supervisor/conf.d/webapp.conf
          owner: root
          group: root
          mode: 0644
      - command: supervisorctl reread
      - service:
          name: supervisor
          state: restarted
      - copy:
          src: /tmp/nginx.conf
          dest: /etc/nginx/conf.d/default.conf
          owner: root
          group: root
          mode: 0644

  - name: install logstash
    block:
      - shell: |
          wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
          echo "deb https://artifacts.elastic.co/packages/6.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-6.x.list
          sudo apt-get update && sudo apt-get install logstash

      - lineinfile: >
          dest=/etc/environment
          state=present
          backrefs=yes
          regexp='PATH=(["]*)((?!.*?/usr/share/logstash/bin).*?)(["]*)$'
          line="PATH=\1\2:/usr/share/logstash/bin\3"
  
      - user:
          name: ubuntu
          append: yes
          groups: logstash
      
      - command: /usr/share/logstash/bin/logstash-plugin install logstash-output-amazon_es
  
  - name: install gatling
    block:
      - get_url: 
          url: https://repo1.maven.org/maven2/io/gatling/highcharts/gatling-charts-highcharts-bundle/3.2.1/{{gatling_version}}-bundle.zip
          dest: /opt/{{gatling_version}}-bundle.zip
      - file:
          path: /opt/{{gatling_version}}
          state: directory
      - unarchive:
          src: /opt/{{gatling_version}}-bundle.zip
          dest: /opt
      - command: rm /opt/{{gatling_version}}-bundle.zip

      - file:
          path: /opt/{{gatling_version}}/user-files/simulations/webapp
          state: directory

      - copy:
          src: /tmp/RecordedSimulation.scala
          dest: /opt/{{gatling_version}}/user-files/simulations/webapp/RecordedSimulation.scala
          owner: ubuntu
          group: root
          mode: 0644

      - file:
          path: /opt/{{gatling_version}}
          state: directory
          owner: ubuntu
          recurse: yes

      - lineinfile: >
          dest=/etc/environment
          state=present
          backrefs=yes
          regexp='PATH=(["]*)((?!.*?/opt/l{{gatling_version}}/bin).*?)(["]*)$'
          line="PATH=\1\2:/opt/{{gatling_version}}/bin\3"
      
  - name: configure systemd-timesyncd
    copy:
      src: /tmp/timesyncd.conf
      dest: /etc/systemd/timesyncd.conf
      owner: root
      group: root
      mode: 0644
  
  - name: restart systemd-timesyncd
    service:
      name: systemd-timesyncd
      state: restarted

  - name: increase file descriptor limit for more tcp/ip
    block:
      - pam_limits:
          domain: root
          limit_type: hard
          limit_item: nofile
          value: 65535
      - pam_limits:
          domain: root
          limit_type: soft
          limit_item: nofile
          value: 65535
      - pam_limits:
          domain: "*"
          limit_type: hard
          limit_item: nofile
          value: 65535   
      - pam_limits:
          domain: "*"
          limit_type: hard
          limit_item: nofile
          value: 65535      
  
  - name: kernel network optimization settings
    block:
      # increase tcp-time-wait buckets pool size to prevent simple DOS
      - sysctl:
          name: net.ipv4.tcp_tw_reuse
          value: "1"

      # reuse closed sockets faster
      - sysctl:
          name: net.ipv4.tcp_fin_timeout
          value: "15"

      # no tcp slow start
      - sysctl:
          name: net.ipv4.tcp_slow_start_after_idle
          value: "0"

      # increase support for number of backlogged sockets
      - sysctl:
          name: net.core.somaxconn
          value: "1000"   

      - sysctl:
          name: net.core.netdev_max_backlog
          value: "5000"  
          
      # increase amount of memory that can be consumed per socket to 16M
      - sysctl:
          name: net.core.rmem_max
          value: "16777216"

      - sysctl:
          name: net.core.wmem_max
          value: "16777216"

      # increase the number of outstanding syn requests allowed
      - sysctl:
          name: net.ipv4.tcp_max_syn_backlog
          value: "8096"

      # prevent swapping except for OOM condition (no swap on ec2 anyway)
      - sysctl:
          name: vm.swappiness
          value: "0"

      # always allow memory allocations unless there is truly no memory
      - sysctl:
          name: vm.overcommit_memory
          value: "1"

  - name: Set memory limit in GRUB
    lineinfile: >
        dest=/etc/default/grub
        regexp=^GRUB_CMDLINE_LINUX_DEFAULT
        line='GRUB_CMDLINE_LINUX_DEFAULT="console=tty1 console=ttyS0 cgroup_enable=memory swapaccount=1"'
  
  - name: Load new GRUB config
    command: update-grub