{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "webami": {
            "Description": "Web server AMI.",
            "Type": "String",
            "Default": "ami-0414e79e87fbc38af"
        },
        "asgsize": {
            "Description": "ASG size.",
            "Type": "String",
            "Default": "2"
        },
          "YourIp": {
            "Description": "The current CIDR IP address of your workstation (x.x.x.x/32). http://checkip.amazonaws.com/",
            "Type": "String",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-9]|3[0-2]))$",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
          }
    },
    "Resources": {

        "Vpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
              "EnableDnsSupport": "true",
              "EnableDnsHostnames": "true",
              "CidrBlock": "10.0.0.0/16",
              "Tags": [
                {
                  "Key": "Environment",
                  "Value": "Test"
                }
              ]
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "Vpc"
                },
                "CidrBlock": "10.0.0.0/24",
                "AvailabilityZone" : "us-east-1a",
                "MapPublicIpOnLaunch": "True"
            }
        },
    
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "Vpc"
                },
                "CidrBlock": "10.0.1.0/24",
                "AvailabilityZone" : "us-east-1b",
                "MapPublicIpOnLaunch": "True"
            }
        },

        "ElbSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "Vpc"
                    },
                "GroupDescription": "Allow http access from everywhere",
                "SecurityGroupIngress": [
                        {
                            "IpProtocol": "tcp",
                            "FromPort": "80",
                            "ToPort": "80",
                            "CidrIp": "0.0.0.0/0"
                        }
                    ]
            }
        },

        "WebserverSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "Vpc"
                    },
                "GroupDescription": "Allow port 80 from ELB",
                "SecurityGroupIngress": [
                        {
                            "IpProtocol": "tcp",
                            "FromPort": "80",
                            "ToPort": "80",
                            "SourceSecurityGroupId": {
                                "Fn::GetAtt": ["ElbSG", "GroupId"]
                            }
                        }
                    ]
            }
        },

        "PerftestSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "Vpc"
                    },
                "GroupDescription": "Allow port 80 from admin",
                "SecurityGroupIngress": [
                        {
                            "IpProtocol": "tcp",
                            "FromPort": "80",
                            "ToPort": "80",
                            "CidrIp": {"Ref": "YourIp"}
                        }
                    ]
            }
        },

        "InternetGW": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {}
        },
        "VpcGwAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGW"
                },
                "VpcId": {
                    "Ref": "Vpc"
                }
            }
        },
        "PublicRT": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                "Ref": "Vpc"
                }
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                    "DestinationCidrBlock": "0.0.0.0/0",
                    "RouteTableId": {
                    "Ref": "PublicRT"
                },
                "GatewayId": {
                    "Ref": "InternetGW"
                }
            },
            "DependsOn": [
                "InternetGW"
            ]
        },
        "PublicSubnet1RTassoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRT"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            }
        },
        "PublicSubnet2RTassoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRT"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                }
            }
        },

        "ESCluster": {
            "Type": "AWS::Elasticsearch::Domain",
            "DependsOn": ["ElasticUseraccessRole"],
            "Properties": {
                "DomainName": "webtest",
                "ElasticsearchVersion": "6.8",
                "ElasticsearchClusterConfig": {
                    "InstanceCount": 1,
                    "InstanceType": "t2.small.elasticsearch"
                },
                "EBSOptions":{
                    "EBSEnabled":true,
                    "Iops":0,
                    "VolumeSize":20,
                    "VolumeType":"gp2"
                },
                "AccessPolicies": {
                    "Version": "2012-10-17",
                    "Statement":[
                        {
                           "Effect":"Allow",
                           "Principal":{
                              "AWS": [
                                  {"Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/elastic-useraccess-role"}
                                ]
                           },
                           "Action": [
                               "es:*"
                           ],
                           "Resource": {"Fn::Sub": "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/webtest/*"}
                        },
                        {
                            "Effect":"Allow",
                            "Principal":{
                               "AWS": ["*"]
                            },
                            "Action": [
                                "es:*"
                            ],
                            "Condition": {
                                "IpAddress": {
                                  "aws:SourceIp": [
                                    {"Ref": "YourIp"}
                                  ]
                                }
                            },
                            "Resource": {"Fn::Sub": "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/webtest/*"}
                         }
                     ] 
                },
                "Tags": [
                    {
                        "Key": "project",
                        "Value": "webtest"
                    }
                ]
            }
        },

        "ELB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "LoadBalancerAttributes": [
                    {
                        "Key": "idle_timeout.timeout_seconds",
                        "Value": "30"
                    }
                ],
                "Name": { "Fn::Join": [ "", [{"Ref": "AWS::StackName"},"-alb"] ] },
                "Scheme": "internet-facing",
                "SecurityGroups": [ {"Ref": "ElbSG"} ],
                "Subnets": [
                    { "Ref": "PublicSubnet1"},
                    { "Ref": "PublicSubnet2"}
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "", [{"Ref": "AWS::StackName"},"-","-alb"] ] }
                    }
                ]
            }
        },

        "ELBListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "TargetGroupArn": { "Ref": "ELBTargetGroup" },
                        "Type": "forward"
                    }
                ],
                "LoadBalancerArn": {"Ref": "ELB"},
                "Port": "80",
                "Protocol": "HTTP"
            }
        },

        "ELBTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "HealthCheckPath": "/health",
                "HealthCheckProtocol": "HTTP",
                "HealthCheckIntervalSeconds": 10,
                "HealthCheckTimeoutSeconds": 5,
                "HealthyThresholdCount": 2,
                "UnhealthyThresholdCount": 2,
                "TargetType": "instance",
                "Port": 80,
                "Protocol": "HTTP",
                "VpcId": {"Ref": "Vpc"}
            }
        },

        "WebGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "DesiredCapacity": {"Ref": "asgsize"},
                "LaunchConfigurationName": {
                    "Ref": "WebLaunchConf"
                },
                "MaxSize": {"Ref": "asgsize"},
                "MinSize": {"Ref": "asgsize"},
                "Tags": [
                    {
                        "Key": "Name",
                        "PropagateAtLaunch": "true",
                        "Value": "webapp"
                    },
                    {
                        "Key": "Role",
                        "PropagateAtLaunch": "true",
                        "Value": "webserver"
                    }
                ],
                "TargetGroupARNs": [
                    {"Ref": "ELBTargetGroup"}
                ],
                "VPCZoneIdentifier": [
                    {"Ref": "PublicSubnet1"},
                    {"Ref": "PublicSubnet2"}
                ]
            }
        },

        "WebInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "ElasticUseraccessRole"
                    }
                ]
            }
        },

        "WebLaunchConf": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "AssociatePublicIpAddress": "true",
                "IamInstanceProfile": {
                    "Ref": "WebInstanceProfile"
                },
                "ImageId": {
                    "Ref": "webami"
                },
                "InstanceType": "t3.small",
                "SecurityGroups": [
                    {
                        "Ref": "WebserverSG"
                    }
                ]
            }
        },
        "ElasticUseraccessRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": "elastic-useraccess-role",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Resource": ["*"],
                                    "Action": [
                                        "es:Http*"
                                    ]
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "elastic-app-access"
                    }
                ]
            }
        },

        "LoadServer": {
            "Type": "AWS::EC2::Instance",
            "Properties" : {
              "InstanceType": "t3.small",
              "ImageId": {"Ref": "webami"},
              "SubnetId": {"Ref": "PublicSubnet1"},
              "SecurityGroupIds": [
                { "Ref": "PerftestSG"}
              ],
              "Tags" : [
                { "Key": "Name",
                  "Value": "loadserver"
                }
              ],
              "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "# we don't need to run supervisor so stop it\n",
                                "service supervisor stop\n",
                                "# we need to reinstall nginx\n",
                                "service nginx stop\n",
                                "apt-get purge nginx -y\n",
                                "apt-get install nginx -y\n",
                                "service nginx start\n"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {
        "ELBEndpoint": {
            "Description": "ELB DNS endpoint address",
            "Value": {"Fn::GetAtt": ["ELB", "DNSName"]}
        }
    }
}